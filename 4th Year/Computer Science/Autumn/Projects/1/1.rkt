#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.0.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wxmedia\0"
4 1 8 #"wximage\0"
2 0 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 30 #"(lib \"image-core.ss\" \"mrlib\")\0"
1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 73 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 9 #"Consolas\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
48 #"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1           0 2921 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 170
(
 #"#reader(lib \"htdp-advanced-reader.ss\" \"lang\")((modname |1|) (rea"
 #"d-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor"
 #" repeating-decimal #t #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 17 3 14 #";; Kris Harper"
0 0 56 29 1 #"\n"
0 0 17 3 12 #";; Project 1"
0 0 56 29 1 #"\n"
0 0 17 3 13 #";; CMSC 15100"
0 0 56 29 1 #"\n"
0 0 17 3 10 #";; 11.9.10"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 23 #";;;;;;;;;; requirements"
0 0 56 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 56 3 1 #" "
0 0 19 3 22 #"\"project1-support.rkt\""
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 56 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 34 #";;;;;;;;;; basic 3D vector support"
0 0 56 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 44 #";; a vec3 represents a 3D vector or position"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 56 3 1 #" "
0 0 14 3 4 #"vec3"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 56 3 1 #" "
0 0 14 3 1 #"y"
0 0 56 3 1 #" "
0 0 14 3 1 #"z"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 29 #";; v3-add : vec3 vec3 -> vec3"
0 0 56 29 1 #"\n"
0 0 17 3 18 #";; add two vectors"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"v3-add"
0 0 56 3 1 #" "
0 0 14 3 1 #"u"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-x"
0 0 56 3 1 #" "
0 0 14 3 1 #"u"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-x"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-y"
0 0 56 3 1 #" "
0 0 14 3 1 #"u"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-y"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-z"
0 0 56 11 1 #" "
0 0 14 3 1 #"u"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-z"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 4 #"))))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"v3-add"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 20 3 1 #"2"
0 0 56 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 20 3 2 #"-1"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"2"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 29 #";; v3-sub : vec3 vec3 -> vec3"
0 0 56 29 1 #"\n"
0 0 17 3 23 #";; subtract two vectors"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"v3-sub"
0 0 56 3 1 #" "
0 0 14 3 1 #"u"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-x"
0 0 56 3 1 #" "
0 0 14 3 1 #"u"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-x"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-y"
0 0 56 3 1 #" "
0 0 14 3 1 #"u"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-y"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-z"
0 0 56 11 1 #" "
0 0 14 3 1 #"u"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-z"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 4 #"))))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"v3-sub"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 20 3 1 #"2"
0 0 56 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 20 3 2 #"-1"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"3"
0 0 56 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 30 #";; v3-scale : num vec3 -> vec3"
0 0 56 29 1 #"\n"
0 0 17 3 32 #";; multiply a vector by a scalar"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"v3-scale"
0 0 56 3 1 #" "
0 0 14 3 1 #"s"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 56 3 1 #" "
0 0 14 3 1 #"s"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-x"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 56 3 1 #" "
0 0 14 3 1 #"s"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-y"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 56 3 1 #" "
0 0 14 3 1 #"s"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-z"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 4 #"))))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 28 #";; v3-dot : vec3 vec3 -> num"
0 0 56 29 1 #"\n"
0 0 17 3 14 #";; dot product"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"v3-dot"
0 0 56 3 1 #" "
0 0 14 3 1 #"u"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-x"
0 0 56 3 1 #" "
0 0 14 3 1 #"u"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-x"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-y"
0 0 56 3 1 #" "
0 0 14 3 1 #"u"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-y"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-z"
0 0 56 3 1 #" "
0 0 14 3 1 #"u"
0 0 22 3 1 #")"
0 0 56 11 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vec3-z"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 4 #"))))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 29 #";; v3-length-sq : vec3 -> num"
0 0 56 29 1 #"\n"
0 0 17 3 46 #";; return the square of the length of a vector"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"v3-length-sq"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"v3-dot"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 26 #";; v3-length : vec3 -> num"
0 0 56 29 1 #"\n"
0 0 17 3 32 #";; return the length of a vector"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"v3-length"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"sqrt"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"v3-length-sq"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 3 #")))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"v3-length"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"3"
0 0 56 3 1 #" "
0 0 20 3 1 #"4"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"v3-length"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 30 #";; v3-normalize : vec3 -> vec3"
0 0 56 29 1 #"\n"
0 0 17 3 91
(
 #";; scale a vector so that it is a unit vector; returns the zero vect"
 #"or on very short inputs"
) 0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"v3-normalize"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 5 #"local"
0 0 56 3 1 #" "
0 0 22 3 2 #"(("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 14 3 5 #"lenSq"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"v3-length-sq"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 3 #")))"
0 0 56 29 1 #"\n"
0 0 56 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 56 29 1 #"\n"
0 0 56 3 6 #"      "
0 0 22 3 2 #"[("
0 0 14 3 1 #"<"
0 0 56 3 1 #" "
0 0 14 3 5 #"lenSq"
0 0 56 3 1 #" "
0 0 20 3 8 #"0.000001"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #")]"
0 0 56 29 1 #"\n"
0 0 56 3 6 #"      "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"v3-scale"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"sqrt"
0 0 56 3 1 #" "
0 0 14 3 5 #"lenSq"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 5 #")])))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"v3-normalize"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"2"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"v3-normalize"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 92
(
 #";; a ray is defined by its origin (a position) and a direction (a un"
 #"it vector).  We can view"
) 0 0 56 29 1 #"\n"
0 0 17 3 49 #";; a ray as a function from scalars to positions:"
0 0 56 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 56 29 1 #"\n"
0 0 17 3 27 #";;    R(t) = origin + t*dir"
0 0 56 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 56 3 1 #" "
0 0 14 3 3 #"ray"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"origin"
0 0 56 3 1 #" "
0 0 14 3 3 #"dir"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 33 #";; ray-position : ray num -> vec3"
0 0 56 29 1 #"\n"
0 0 17 3 15 #";; compute R(t)"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"ray-position"
0 0 56 3 1 #" "
0 0 14 3 1 #"R"
0 0 56 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"v3-add"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"ray-origin"
0 0 56 3 1 #" "
0 0 14 3 1 #"R"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"v3-scale"
0 0 56 3 1 #" "
0 0 14 3 1 #"t"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"ray-dir"
0 0 56 3 1 #" "
0 0 14 3 1 #"R"
0 0 22 3 4 #"))))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"ray-position"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-ray"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"5"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 32 #";;;;;;;;;; floating-point colors"
0 0 56 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 56 3 1 #" "
0 0 14 3 3 #"rgb"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"r"
0 0 56 3 1 #" "
0 0 14 3 1 #"g"
0 0 56 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 28 #";; color->rgb : color -> rgb"
0 0 56 29 1 #"\n"
0 0 17 3 47 #";; convert from a Racket color to an RGB triple"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"color->rgb"
0 0 56 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 5 #"local"
0 0 56 3 1 #" "
0 0 22 3 2 #"(("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"cvt-pixel"
0 0 56 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 56 3 1 #" "
0 0 14 3 1 #"b"
0 0 56 3 1 #" "
0 0 20 3 3 #"255"
0 0 22 3 3 #")))"
0 0 56 29 1 #"\n"
0 0 56 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"cvt-pixel"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"color-red"
0 0 56 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"cvt-pixel"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"color-green"
0 0 56 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"cvt-pixel"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"color-blue"
0 0 56 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 5 #")))))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 40 #";; name->rgb : (or symbol string) -> rgb"
0 0 56 29 1 #"\n"
0 0 17 3 64
#";; convert a color name (e.g., 'red or \"black\") to an RGB triple"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"name->rgb"
0 0 56 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"color->rgb"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"name->color"
0 0 56 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 3 #")))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"name->rgb"
0 0 56 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"name->rgb"
0 0 56 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"name->rgb"
0 0 56 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 28 #";; rgb->color : rgb -> color"
0 0 56 29 1 #"\n"
0 0 17 3 48 #";; convert an RGB triple to a Racket color value"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"rgb->color"
0 0 56 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 5 #"local"
0 0 56 3 1 #" "
0 0 22 3 2 #"(("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"cvt-pixel"
0 0 56 3 1 #" "
0 0 14 3 1 #"f"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"inexact->exact"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"floor"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 56 3 1 #" "
0 0 20 3 3 #"255"
0 0 56 3 1 #" "
0 0 14 3 1 #"f"
0 0 22 3 5 #")))))"
0 0 56 29 1 #"\n"
0 0 56 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-color"
0 0 56 29 1 #"\n"
0 0 56 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 9 #"cvt-pixel"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-r"
0 0 56 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 9 #"cvt-pixel"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-g"
0 0 56 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 9 #"cvt-pixel"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-b"
0 0 56 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 5 #")))))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"rgb->color"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-color"
0 0 56 3 1 #" "
0 0 20 3 3 #"255"
0 0 56 3 1 #" "
0 0 20 3 3 #"255"
0 0 56 3 1 #" "
0 0 20 3 3 #"255"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 32 #";; rgb-modulate : rgb rgb -> rgb"
0 0 56 29 1 #"\n"
0 0 17 3 50 #";; modulate RGB colors by multiplying the channels"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"rgb-modulate"
0 0 56 3 1 #" "
0 0 14 3 2 #"c1"
0 0 56 3 1 #" "
0 0 14 3 2 #"c2"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 29 1 #"\n"
0 0 56 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-r"
0 0 56 3 1 #" "
0 0 14 3 2 #"c1"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-r"
0 0 56 3 1 #" "
0 0 14 3 2 #"c2"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-g"
0 0 56 3 1 #" "
0 0 14 3 2 #"c1"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-g"
0 0 56 3 1 #" "
0 0 14 3 2 #"c2"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-b"
0 0 56 3 1 #" "
0 0 14 3 2 #"c1"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-b"
0 0 56 3 1 #" "
0 0 14 3 2 #"c2"
0 0 22 3 4 #"))))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"rgb-modulate"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.2"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.5"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.2"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.1"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.5"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.6"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 11 1 #" "
0 6          10 56 5 #"1/50\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 56 3 1 #" "
0 6          10 56 4 #"1/4\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 56 3 1 #" "
0 6          10 56 5 #"3/25\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 29 #";; rgb-scale : num rgb -> rgb"
0 0 56 29 1 #"\n"
0 0 17 3 43 #";; scale a color with saturation at (1,1,1)"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"rgb-scale"
0 0 56 3 1 #" "
0 0 14 3 1 #"s"
0 0 56 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 29 1 #"\n"
0 0 56 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 3 #"min"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 56 3 1 #" "
0 0 14 3 1 #"s"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-r"
0 0 56 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 3 #")))"
0 0 56 29 1 #"\n"
0 0 56 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 3 #"min"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 56 3 1 #" "
0 0 14 3 1 #"s"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-g"
0 0 56 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 3 #")))"
0 0 56 29 1 #"\n"
0 0 56 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 3 #"min"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 56 3 1 #" "
0 0 14 3 1 #"s"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-b"
0 0 56 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 5 #")))))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"rgb-scale"
0 0 56 3 1 #" "
0 0 20 3 1 #"2"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.1"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.5"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.6"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.2"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 27 #";; rgb-add : rgb rgb -> rgb"
0 0 56 29 1 #"\n"
0 0 17 3 44 #";; add two colors with saturation at (1,1,1)"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"rgb-add"
0 0 56 3 1 #" "
0 0 14 3 2 #"c1"
0 0 56 3 1 #" "
0 0 14 3 2 #"c2"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 29 1 #"\n"
0 0 56 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 3 #"min"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-r"
0 0 56 3 1 #" "
0 0 14 3 2 #"c1"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-r"
0 0 56 3 1 #" "
0 0 14 3 2 #"c2"
0 0 22 3 3 #")))"
0 0 56 29 1 #"\n"
0 0 56 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 3 #"min"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-g"
0 0 56 3 1 #" "
0 0 14 3 2 #"c1"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-g"
0 0 56 3 1 #" "
0 0 14 3 2 #"c2"
0 0 22 3 3 #")))"
0 0 56 29 1 #"\n"
0 0 56 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 3 #"min"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-b"
0 0 56 3 1 #" "
0 0 14 3 2 #"c1"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rgb-b"
0 0 56 3 1 #" "
0 0 14 3 2 #"c2"
0 0 22 3 5 #")))))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"rgb-add"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.2"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.5"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.5"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.1"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.5"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.6"
0 0 22 3 2 #"))"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 3 1 #" "
0 0 20 3 3 #"0.3"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 63
#";;;;;;;;;;;;;;;;;;;; your code starts here ;;;;;;;;;;;;;;;;;;;;"
0 0 56 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 19 #";; Data Definitions"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 48 #";; a sphere is a (make-sphere pos rad col) where"
0 0 56 29 1 #"\n"
0 0 17 3 19 #";;  - pos is a vec3"
0 0 56 29 1 #"\n"
0 0 17 3 21 #";;  - rad is a number"
0 0 56 29 1 #"\n"
0 0 17 3 19 #";;  - col is an rgb"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 56 3 1 #" "
0 0 14 3 6 #"sphere"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"pos"
0 0 56 3 1 #" "
0 0 14 3 3 #"rad"
0 0 56 3 1 #" "
0 0 14 3 3 #"col"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 42 #";; a light is a (make-light vec col) where"
0 0 56 29 1 #"\n"
0 0 17 3 19 #";;  - vec is a vec3"
0 0 56 29 1 #"\n"
0 0 17 3 19 #";;  - col is an rgb"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 56 3 1 #" "
0 0 14 3 5 #"light"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"vec"
0 0 56 3 1 #" "
0 0 14 3 3 #"col"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 52 #";; a scene is a (make-scene col obj light amb) where"
0 0 56 29 1 #"\n"
0 0 17 3 20 #";;  - col is a color"
0 0 56 29 1 #"\n"
0 0 17 3 19 #";;  - obj is a list"
0 0 56 29 1 #"\n"
0 0 17 3 22 #";;  - light is a light"
0 0 56 29 1 #"\n"
0 0 17 3 19 #";;  - amb is an rgb"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 56 3 1 #" "
0 0 14 3 5 #"scene"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"col"
0 0 56 3 1 #" "
0 0 14 3 3 #"obj"
0 0 56 3 1 #" "
0 0 14 3 5 #"light"
0 0 56 3 1 #" "
0 0 14 3 3 #"amb"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 42 #";; a camera is a (make-camera z w h) where"
0 0 56 29 1 #"\n"
0 0 17 3 19 #";;  - z is a number"
0 0 56 29 1 #"\n"
0 0 17 3 19 #";;  - w is a number"
0 0 56 29 1 #"\n"
0 0 17 3 19 #";;  - h is a number"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 56 3 1 #" "
0 0 14 3 6 #"camera"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"z"
0 0 56 3 1 #" "
0 0 14 3 1 #"w"
0 0 56 3 1 #" "
0 0 14 3 1 #"h"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 40 #";; a hit is a (make-hit d col vec) where"
0 0 56 29 1 #"\n"
0 0 17 3 19 #";;  - d is a number"
0 0 56 29 1 #"\n"
0 0 17 3 19 #";;  - col is an rgb"
0 0 56 29 1 #"\n"
0 0 17 3 19 #";;  - vec is a vec3"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 56 3 1 #" "
0 0 14 3 3 #"hit"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"d"
0 0 56 3 1 #" "
0 0 14 3 3 #"col"
0 0 56 3 1 #" "
0 0 14 3 3 #"vec"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 23 #";; a hit-test is either"
0 0 56 29 1 #"\n"
0 0 17 3 11 #";;  - a hit"
0 0 56 29 1 #"\n"
0 0 17 3 13 #";;  - a 'miss"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 23 #";; Intersection Testing"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 37 #";; intersect : ray object -> hit-test"
0 0 56 29 1 #"\n"
0 0 17 3 87
(
 #";; test an object obj against the ray R for intersection. If they in"
 #"tersect, return the"
) 0 0 56 29 1 #"\n"
0 0 17 3 42 #";; hit information; otherwise return 'miss"
0 0 56 29 1 #"\n"
0 0 17 3 33 #";; (define (intersect R obj) ...)"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"intersect"
0 0 56 3 1 #" "
0 0 14 3 1 #"R"
0 0 56 3 1 #" "
0 0 14 3 3 #"obj"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 56 29 1 #"\n"
0 0 56 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 7 #"sphere?"
0 0 56 3 1 #" "
0 0 14 3 3 #"obj"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"sphere-intersect"
0 0 56 3 1 #" "
0 0 14 3 3 #"obj"
0 0 56 3 1 #" "
0 0 14 3 1 #"R"
0 0 22 3 2 #")]"
0 0 56 29 1 #"\n"
0 0 56 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 56 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"intersect"
0 0 56 3 1 #" "
0 0 19 3 17 #"\"object expected\""
0 0 22 3 4 #")]))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"intersect"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 19 3 28 #"\"intersect: object expected\""
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 29 1 #"\n"
0 0 17 3 44 #";; sphere-intersect : ray sphere -> hit-test"
0 0 59 29 1 #"\n"
0 0 17 3 51 #";; test a sphere s against a ray R for intersection"
0 0 59 29 1 #"\n"
0 0 17 3 37 #";; (define (sphere-intersect s R)...)"
0 0 59 29 1 #"\n"
0 0 59 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"sphere-intersect"
0 0 59 3 1 #" "
0 0 14 3 1 #"s"
0 0 59 3 1 #" "
0 0 14 3 1 #"R"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 59 29 1 #"\n"
0 0 59 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 3 #"not"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"sphere?"
0 0 59 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 2 #"))"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 59 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 16 #"sphere-intersect"
0 0 59 3 1 #" "
0 0 19 3 17 #"\"sphere expected\""
0 0 22 3 2 #")]"
0 0 59 29 1 #"\n"
0 0 59 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 3 #"not"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"ray?"
0 0 59 3 1 #" "
0 0 14 3 1 #"R"
0 0 22 3 2 #"))"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 59 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 16 #"sphere-intersect"
0 0 59 3 1 #" "
0 0 19 3 14 #"\"ray expected\""
0 0 22 3 2 #")]"
0 0 59 29 1 #"\n"
0 0 59 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 5 #"local"
0 0 59 3 1 #" "
0 0 22 3 2 #"(("
0 0 15 3 6 #"define"
0 0 59 3 1 #" "
0 0 14 3 3 #"dst"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"v3-sub"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"ray-origin"
0 0 59 3 1 #" "
0 0 14 3 1 #"R"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"sphere-pos"
0 0 59 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 3 #")))"
0 0 59 29 1 #"\n"
0 0 59 3 18 #"                  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 59 3 1 #" "
0 0 14 3 1 #"B"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"v3-dot"
0 0 59 3 1 #" "
0 0 14 3 3 #"dst"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"ray-dir"
0 0 59 3 1 #" "
0 0 14 3 1 #"R"
0 0 22 3 3 #")))"
0 0 59 29 1 #"\n"
0 0 59 3 18 #"                  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 59 3 1 #" "
0 0 14 3 1 #"C"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"v3-dot"
0 0 59 3 1 #" "
0 0 14 3 3 #"dst"
0 0 59 3 1 #" "
0 0 14 3 3 #"dst"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"sphere-rad"
0 0 59 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"sphere-rad"
0 0 56 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 4 #"))))"
0 0 59 29 1 #"\n"
0 0 59 3 18 #"                  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 59 3 1 #" "
0 0 14 3 1 #"D"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 59 3 1 #" "
0 0 14 3 1 #"B"
0 0 59 3 1 #" "
0 0 14 3 1 #"B"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 14 3 1 #"C"
0 0 22 3 2 #"))"
0 0 59 29 1 #"\n"
0 0 59 3 18 #"                  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 59 3 1 #" "
0 0 14 3 1 #"t"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 59 3 1 #" "
0 0 14 3 1 #"B"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"sqrt"
0 0 59 3 1 #" "
0 0 14 3 1 #"D"
0 0 22 3 5 #")))))"
0 0 59 29 1 #"\n"
0 0 59 3 12 #"            "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 59 29 1 #"\n"
0 0 59 3 14 #"              "
0 0 22 3 2 #"[("
0 0 14 3 3 #"and"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #">"
0 0 59 3 1 #" "
0 0 14 3 1 #"D"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #">="
0 0 56 3 1 #" "
0 0 14 3 1 #"t"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-hit"
0 0 59 29 1 #"\n"
0 0 56 3 16 #"                "
0 0 14 3 1 #"t"
0 0 59 29 1 #"\n"
0 0 56 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 10 #"sphere-col"
0 0 59 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 56 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 12 #"v3-normalize"
0 0 59 29 1 #"\n"
0 0 56 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 6 #"v3-sub"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"ray-position"
0 0 59 3 1 #" "
0 0 14 3 1 #"R"
0 0 59 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"sphere-pos"
0 0 59 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 5 #"))))]"
0 0 59 29 1 #"\n"
0 0 59 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 59 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"miss"
0 0 22 3 6 #"]))]))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"sphere-intersect"
0 0 56 29 1 #"\n"
0 0 56 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-sphere"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"2"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 3 28 #"                            "
0 0 20 3 1 #"1"
0 0 56 29 1 #"\n"
0 0 56 3 28 #"                            "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-ray"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 3 #")))"
0 0 56 29 1 #"\n"
0 0 56 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-hit"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 2 #"-1"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 3 #")))"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"sphere-intersect"
0 0 56 29 1 #"\n"
0 0 56 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-sphere"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"2"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 3 28 #"                            "
0 0 20 3 1 #"1"
0 0 56 29 1 #"\n"
0 0 56 3 28 #"                            "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-ray"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 3 #")))"
0 0 56 29 1 #"\n"
0 0 56 3 14 #"              "
0 0 20 3 1 #"'"
0 0 14 3 4 #"miss"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"sphere-intersect"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-ray"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 3 43 #"                                           "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"1"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 3 #")))"
0 0 56 29 1 #"\n"
0 0 56 3 13 #"             "
0 0 19 3 35 #"\"sphere-intersect: sphere expected\""
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"sphere-intersect"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-sphere"
0 0 56 29 1 #"\n"
0 0 56 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 3 32 #"                                "
0 0 20 3 1 #"1"
0 0 56 29 1 #"\n"
0 0 56 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 3 31 #"                               "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 3 13 #"             "
0 0 19 3 32 #"\"sphere-intersect: ray expected\""
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 29 1 #"\n"
0 0 59 29 1 #"\n"
0 0 17 3 11 #";; Lighting"
0 0 59 29 1 #"\n"
0 0 59 29 1 #"\n"
0 0 17 3 52 #";; shadowed-by? : vec3 -> light -> object -> boolean"
0 0 59 29 1 #"\n"
0 0 17 3 63
#";; test to see if a position pos receives illumination from the"
0 0 59 29 1 #"\n"
0 0 17 3 40 #";;   light or is shadowed by the object."
0 0 59 29 1 #"\n"
0 0 17 3 33 #";; (define (shadowed-by? pos)...)"
0 0 59 29 1 #"\n"
0 0 59 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"shadowed-by?"
0 0 59 3 1 #" "
0 0 14 3 3 #"pos"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 59 29 1 #"\n"
0 0 59 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 3 #"not"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"vec3?"
0 0 59 3 1 #" "
0 0 14 3 3 #"pos"
0 0 22 3 2 #"))"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 59 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 12 #"shadowed-by?"
0 0 59 3 1 #" "
0 0 19 3 15 #"\"vec3 expected\""
0 0 22 3 2 #")]"
0 0 59 29 1 #"\n"
0 0 59 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"light"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 12 #"            "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"obj"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 56 3 14 #"              "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 59 29 1 #"\n"
0 0 56 3 16 #"                "
0 0 22 3 2 #"[("
0 0 14 3 6 #"equal?"
0 0 56 29 1 #"\n"
0 0 56 3 18 #"                  "
0 0 22 3 1 #"("
0 0 14 3 9 #"intersect"
0 0 56 29 1 #"\n"
0 0 56 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-ray"
0 0 56 29 1 #"\n"
0 0 56 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 6 #"v3-add"
0 0 56 3 1 #" "
0 0 14 3 3 #"pos"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"v3-scale"
0 0 56 29 1 #"\n"
0 0 56 3 33 #"                                 "
0 0 20 3 6 #"0.0001"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"light-vec"
0 0 56 3 1 #" "
0 0 14 3 5 #"light"
0 0 22 3 3 #")))"
0 0 56 29 1 #"\n"
0 0 56 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 9 #"light-vec"
0 0 56 3 1 #" "
0 0 14 3 5 #"light"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 56 3 19 #"                   "
0 0 14 3 3 #"obj"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"miss"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #"]"
0 0 59 29 1 #"\n"
0 0 56 3 16 #"                "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 59 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 7 #"])))]))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"shadowed-by?"
0 0 56 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 19 3 29 #"\"shadowed-by?: vec3 expected\""
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 29 1 #"\n"
0 0 17 3 44 #";; lighting : scene -> ray hit-test -> color"
0 0 59 29 1 #"\n"
0 0 17 3 88
(
 #";; given a scene, a ray and a hit-test for the ray, compute the colo"
 #"r for this hit-test."
) 0 0 59 29 1 #"\n"
0 0 17 3 83
(
 #";;  If it is 'miss, then the color is the scene's background color, "
 #"otherwise it is"
) 0 0 59 29 1 #"\n"
0 0 17 3 55 #";;  determined by the diffuse lighting at the hit point"
0 0 59 29 1 #"\n"
0 0 17 3 31 #";; (define (lighting scene)...)"
0 0 59 29 1 #"\n"
0 0 59 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"lighting"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 59 29 1 #"\n"
0 0 59 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 3 #"not"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"scene?"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 2 #"))"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 59 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"lighting"
0 0 59 3 1 #" "
0 0 19 3 16 #"\"scene expected\""
0 0 22 3 2 #")]"
0 0 59 29 1 #"\n"
0 0 59 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"ray"
0 0 59 3 1 #" "
0 0 14 3 2 #"ht"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 12 #"            "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 59 29 1 #"\n"
0 0 59 3 14 #"              "
0 0 22 3 2 #"[("
0 0 14 3 6 #"equal?"
0 0 59 3 1 #" "
0 0 14 3 2 #"ht"
0 0 59 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"miss"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"scene-col"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 2 #")]"
0 0 59 29 1 #"\n"
0 0 59 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 59 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 2 #"[("
0 0 14 3 5 #"ormap"
0 0 59 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 12 #"shadowed-by?"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"ray-position"
0 0 59 29 1 #"\n"
0 0 4 3 41 #"                                         "
0 0 14 3 3 #"ray"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"hit-d"
0 0 59 3 1 #" "
0 0 14 3 2 #"ht"
0 0 22 3 3 #")))"
0 0 59 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 11 #"scene-light"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 2 #"))"
0 0 59 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 9 #"scene-obj"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 2 #"))"
0 0 59 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"rgb->color"
0 0 56 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 12 #"rgb-modulate"
0 0 59 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 9 #"scene-amb"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 7 #"hit-col"
0 0 59 3 1 #" "
0 0 14 3 2 #"ht"
0 0 22 3 4 #")))]"
0 0 59 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"rgb->color"
0 0 59 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 22 3 1 #"("
0 0 14 3 12 #"rgb-modulate"
0 0 59 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 7 #"hit-col"
0 0 59 3 1 #" "
0 0 14 3 2 #"ht"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 7 #"rgb-add"
0 0 59 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 9 #"scene-amb"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 9 #"rgb-scale"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 3 #"max"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"v3-dot"
0 0 59 29 1 #"\n"
0 0 4 3 35 #"                                   "
0 0 22 3 1 #"("
0 0 14 3 7 #"hit-vec"
0 0 59 3 1 #" "
0 0 14 3 2 #"ht"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 4 3 35 #"                                   "
0 0 22 3 1 #"("
0 0 14 3 9 #"light-vec"
0 0 59 29 1 #"\n"
0 0 4 3 36 #"                                    "
0 0 22 3 1 #"("
0 0 14 3 11 #"scene-light"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 4 #"))))"
0 0 59 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 9 #"light-col"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"scene-light"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 14 #"))))))])]))]))"
0 0 59 29 1 #"\n"
0 0 59 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"lighting"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 19 3 26 #"\"lighting: scene expected\""
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 14 #";; Ray Tracing"
0 0 59 29 1 #"\n"
0 0 59 29 1 #"\n"
0 0 17 3 32 #";; trace : scene -> ray -> color"
0 0 59 29 1 #"\n"
0 0 17 3 63
#";; Given a scene, return a function for tracing the ray through"
0 0 59 29 1 #"\n"
0 0 17 3 32 #";;  the scene to compute a color"
0 0 59 29 1 #"\n"
0 0 17 3 28 #";; (define (trace scene)...)"
0 0 59 29 1 #"\n"
0 0 59 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"trace"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 59 29 1 #"\n"
0 0 59 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 3 #"not"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"scene?"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 2 #"))"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 59 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"trace"
0 0 59 3 1 #" "
0 0 19 3 16 #"\"scene expected\""
0 0 22 3 2 #")]"
0 0 59 29 1 #"\n"
0 0 59 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"ray"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 12 #"            "
0 0 22 3 1 #"("
0 0 15 3 5 #"local"
0 0 59 3 1 #" "
0 0 22 3 2 #"(("
0 0 15 3 6 #"define"
0 0 59 3 1 #" "
0 0 14 3 4 #"hits"
0 0 59 29 1 #"\n"
0 0 59 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 59 29 1 #"\n"
0 0 59 3 23 #"                       "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"intersect"
0 0 59 3 1 #" "
0 0 14 3 3 #"ray"
0 0 59 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 59 29 1 #"\n"
0 0 59 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 9 #"scene-obj"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 17 3 24 #";; finds the closest hit"
0 0 59 29 1 #"\n"
0 0 59 3 20 #"                    "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"min-hit"
0 0 59 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 22 #"                      "
0 0 22 3 1 #"("
0 0 15 3 5 #"local"
0 0 59 3 1 #" "
0 0 22 3 2 #"(("
0 0 15 3 6 #"define"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"closer"
0 0 59 3 1 #" "
0 0 14 3 2 #"h1"
0 0 59 3 1 #" "
0 0 14 3 2 #"h2"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 32 #"                                "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 59 29 1 #"\n"
0 0 59 3 34 #"                                  "
0 0 22 3 2 #"[("
0 0 14 3 2 #"<="
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"hit-d"
0 0 59 3 1 #" "
0 0 14 3 2 #"h1"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"hit-d"
0 0 59 3 1 #" "
0 0 14 3 2 #"h2"
0 0 22 3 2 #"))"
0 0 59 3 1 #" "
0 0 14 3 2 #"h1"
0 0 22 3 1 #"]"
0 0 59 29 1 #"\n"
0 0 59 3 34 #"                                  "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 59 3 1 #" "
0 0 14 3 2 #"h2"
0 0 22 3 4 #"])))"
0 0 59 29 1 #"\n"
0 0 59 3 24 #"                        "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 59 29 1 #"\n"
0 0 59 3 26 #"                          "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 56 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #"))"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 56 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #")]"
0 0 59 29 1 #"\n"
0 0 59 3 26 #"                          "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"closer"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 59 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"min-hit"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 59 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 8 #")))]))))"
0 0 59 29 1 #"\n"
0 0 59 3 14 #"              "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 59 29 1 #"\n"
0 0 59 3 16 #"                "
0 0 22 3 2 #"[("
0 0 14 3 6 #"andmap"
0 0 59 29 1 #"\n"
0 0 59 3 18 #"                  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 59 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"miss"
0 0 59 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 59 3 1 #" "
0 0 14 3 4 #"hits"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 17 #"                 "
0 0 22 3 2 #"(("
0 0 14 3 8 #"lighting"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 14 3 3 #"ray"
0 0 59 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"miss"
0 0 22 3 2 #")]"
0 0 59 29 1 #"\n"
0 0 59 3 16 #"                "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 59 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 8 #"lighting"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 56 3 23 #"                       "
0 0 14 3 3 #"ray"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"min-hit"
0 0 56 29 1 #"\n"
0 0 56 3 28 #"                            "
0 0 22 3 1 #"("
0 0 14 3 6 #"filter"
0 0 56 29 1 #"\n"
0 0 56 3 29 #"                             "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 56 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"miss"
0 0 56 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 3 #")))"
0 0 56 29 1 #"\n"
0 0 56 3 29 #"                             "
0 0 14 3 4 #"hits"
0 0 22 3 10 #")))])))]))"
0 0 59 29 1 #"\n"
0 0 59 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"trace"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 19 3 23 #"\"trace: scene expected\""
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 29 1 #"\n"
0 0 17 3 35 #";; raytrace : camera scene -> image"
0 0 59 29 1 #"\n"
0 0 17 3 51 #";; generate an image for the given camera and scene"
0 0 59 29 1 #"\n"
0 0 17 3 35 #";; (define (raytrace cam scene)...)"
0 0 59 29 1 #"\n"
0 0 59 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"raytrace"
0 0 59 3 1 #" "
0 0 14 3 3 #"cam"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 59 29 1 #"\n"
0 0 59 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 3 #"not"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"camera?"
0 0 59 3 1 #" "
0 0 14 3 3 #"cam"
0 0 22 3 2 #"))"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 59 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"raytrace"
0 0 59 3 1 #" "
0 0 19 3 17 #"\"camera expected\""
0 0 22 3 2 #")]"
0 0 59 29 1 #"\n"
0 0 59 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 3 #"not"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"scene?"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 2 #"))"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 59 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"raytrace"
0 0 59 3 1 #" "
0 0 19 3 16 #"\"scene expected\""
0 0 22 3 2 #")]"
0 0 59 29 1 #"\n"
0 0 59 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"build-image"
0 0 59 29 1 #"\n"
0 0 59 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 8 #"camera-w"
0 0 59 3 1 #" "
0 0 14 3 3 #"cam"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 8 #"camera-h"
0 0 59 3 1 #" "
0 0 14 3 3 #"cam"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 11 #"           "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"n1"
0 0 59 3 1 #" "
0 0 14 3 2 #"n2"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 13 #"             "
0 0 22 3 2 #"(("
0 0 14 3 5 #"trace"
0 0 59 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-ray"
0 0 59 29 1 #"\n"
0 0 59 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"camera-z"
0 0 59 3 1 #" "
0 0 14 3 3 #"cam"
0 0 22 3 2 #"))"
0 0 59 29 1 #"\n"
0 0 59 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 12 #"v3-normalize"
0 0 59 29 1 #"\n"
0 0 59 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 6 #"v3-sub"
0 0 59 29 1 #"\n"
0 0 59 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 59 29 1 #"\n"
0 0 59 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 59 3 1 #" "
0 0 20 3 1 #"2"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"max"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"camera-w"
0 0 59 3 1 #" "
0 0 14 3 3 #"cam"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"camera-h"
0 0 59 3 1 #" "
0 0 14 3 3 #"cam"
0 0 22 3 3 #")))"
0 0 59 29 1 #"\n"
0 0 59 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 59 3 1 #" "
0 0 14 3 2 #"n2"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"camera-w"
0 0 59 3 1 #" "
0 0 14 3 3 #"cam"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 3 #")))"
0 0 59 29 1 #"\n"
0 0 59 3 28 #"                            "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 59 29 1 #"\n"
0 0 59 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 59 3 1 #" "
0 0 20 3 1 #"2"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"max"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"camera-w"
0 0 59 3 1 #" "
0 0 14 3 3 #"cam"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"camera-h"
0 0 59 3 1 #" "
0 0 14 3 3 #"cam"
0 0 22 3 3 #")))"
0 0 59 29 1 #"\n"
0 0 59 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"camera-h"
0 0 59 3 1 #" "
0 0 14 3 3 #"cam"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 14 3 2 #"n1"
0 0 22 3 2 #"))"
0 0 59 29 1 #"\n"
0 0 59 3 28 #"                            "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"camera-z"
0 0 59 3 1 #" "
0 0 14 3 3 #"cam"
0 0 22 3 11 #"))))))))]))"
0 0 59 29 1 #"\n"
0 0 59 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"raytrace"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-scene"
0 0 59 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"black"
0 0 59 29 1 #"\n"
0 0 59 3 37 #"                                     "
0 0 14 3 5 #"empty"
0 0 59 29 1 #"\n"
0 0 59 3 37 #"                                     "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-light"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-vec3"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 59 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 49 #"                                                 "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 59 29 1 #"\n"
0 0 59 3 37 #"                                     "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-rgb"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 3 #")))"
0 0 59 29 1 #"\n"
0 0 59 3 13 #"             "
0 0 19 3 27 #"\"raytrace: camera expected\""
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"raytrace"
0 0 59 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-camera"
0 0 59 3 1 #" "
0 0 20 3 2 #"-5"
0 0 59 3 1 #" "
0 0 20 3 3 #"200"
0 0 59 3 1 #" "
0 0 20 3 3 #"200"
0 0 22 3 1 #")"
0 0 59 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 59 29 1 #"\n"
0 0 59 3 13 #"             "
0 0 19 3 26 #"\"raytrace: scene expected\""
0 0 22 3 1 #")"
0           0
